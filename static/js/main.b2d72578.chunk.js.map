{"version":3,"sources":["twitter.svg","components/search/search.jsx","components/listing/listing.jsx","components/searchHeader/searchHeader.jsx","actions/index.js","App.js","reducers/index.js","index.js"],"names":["module","exports","Search","props","state","Fragment","className","onSubmit","e","searchHandler","type","onChange","handleInputValue","placeholder","Component","Listing","src","data","user","profile_image_url","alt","style","name","screen_name","created_at","text","searchHeader","havePosts","time","havePostsAction","payload","showLoaderAction","App","setTime","searchText","isBlank","prevProps","httpRequestReducer","this","statuses","length","timer","event","clearInterval","setState","getPostData","preventDefault","target","value","val","httpRequestAction","setInterval","refreshTimer","showLoaderReducer","havePostsReducer","internetIssueReducer","submitSearch","searchInputValue","map","item","index","key","twitter","height","textAlign","errors","message","React","mapDispatchToProps","searchTextAction","searchDataAction","internetIssueAction","relativeURL","keyword","dispatch","getState","a","axios","get","params","then","res","catch","err","connect","combineAllReducers","combineReducers","action","searchTextReducer","searchDataReducer","store","createStore","applyMiddleware","thunk","subscribe","console","log","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b2d72578.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitter.a57ea219.svg\";","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (\r\n            <React.Fragment> \r\n                {/* search */}\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-9\">\r\n                        <form onSubmit={(e)=>this.props.searchHandler(e)}>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"text\" className=\"form-control\" onChange={(e)=>this.props.handleInputValue(e)} placeholder=\"Search\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <button type=\"submit\" className=\"input-group-text search-btn\">Search</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                {/* /search */}\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Search;","import React from 'react';\r\n\r\nconst Listing = (props)=>{\r\n    return(\r\n        <React.Fragment>\r\n        <div className=\"row\">\r\n            <div className=\"col-lg-12 col-md-6\">\r\n                <div className=\"media p-3 card-item\">\r\n                    <img src={props.data.user.profile_image_url} alt=\"\" className=\"mr-3 rounded-circle\" style={{\"width\":\"60px\"}} />\r\n                    <div className=\"media-body\">\r\n                        <h4 className=\"post-title\">\r\n                        {props.data.user.name}\r\n                        <span className=\"user-id\">@{props.data.user.screen_name} </span>\r\n                        <small><i>{props.data.created_at}</i></small>\r\n                        </h4>\r\n                        <p>{props.data.text}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Listing;","import React from 'react';\r\n\r\nconst searchHeader = (props)=>{\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"refresh-time\">\r\n                <p>Search @ Twitter</p>\r\n                {props.havePosts && <p>Auto refresh in {props.time} seconds</p>}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default searchHeader;","import axios from 'axios';\r\n\r\nconst havePostsAction = (data)=>{\r\n    return {\r\n        type: 'HAVE_POSTS',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst showLoaderAction = (data)=>{\r\n    return {\r\n        type: 'SHOW_LOADER',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst searchTextAction = (data) => {\r\n    return {\r\n        type: 'SEARCH_TEXT',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst searchDataAction = (data) => {\r\n    return {\r\n        type: 'SEARCH_DATA',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst internetIssueAction = (data) => {\r\n    return {\r\n        type: 'INTERNET_ISSUE',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst httpRequestAction = (relativeURL, keyword)=>{\r\n    return async (dispatch, getState)=>{\r\n        if(keyword){\r\n            await axios.get(`https://aravindtwitter.herokuapp.com/${relativeURL}`, {\r\n                params: {\r\n                    key: keyword\r\n                }\r\n            }).then((res)=>{\r\n                dispatch(showLoaderAction(false));\r\n                dispatch(havePostsAction(true));\r\n                dispatch({type: 'FETCH_POSTS_SUCCESS', data: res});\r\n            }).catch((err)=>{\r\n                dispatch(showLoaderAction(false));\r\n                dispatch(havePostsAction(false));\r\n                dispatch({type: 'FETCH_POSTS_ERROR', data: err.message});\r\n            })\r\n        }else{\r\n            dispatch(showLoaderAction(false));\r\n            dispatch(havePostsAction(false));\r\n            dispatch({type: 'FETCH_POSTS_ERROR', data: []})\r\n        }\r\n    }\r\n}\r\n\r\nexport {havePostsAction, showLoaderAction, searchTextAction, \r\n        searchDataAction, internetIssueAction, httpRequestAction};\r\n\r\n// export const setTimeAction = (data) => {\r\n//     return {\r\n//         type: 'SET_TIME',\r\n//         payload: data\r\n//     }\r\n// }","import React from 'react';\nimport './App.css';\nimport './loader.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport twitter from './twitter.svg';\n\n// components\nimport Search from './components/search/search';\nimport Listing from './components/listing/listing';\nimport SearchHeader from './components/searchHeader/searchHeader';\n\n// actions\nimport { \n         showLoaderAction, \n         havePostsAction, \n         searchTextAction, \n         searchDataAction,\n         internetIssueAction,\n         httpRequestAction\n        } from './actions/index';\n\nimport { connect } from 'react-redux';\n\n\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      time: 30,\n      setTime: null,\n      searchText: '',\n      isBlank: false\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    if(prevProps.httpRequestReducer !== this.props.httpRequestReducer){\n      {this.props.httpRequestReducer.data &&\n        this.props.httpRequestReducer.data.statuses &&\n        this.props.httpRequestReducer.data.statuses.length &&\n        this.timer()\n      };\n    }\n  }\n\n  // search form submit\n  submitSearch(event){\n    clearInterval(this.state.setTime);\n    if(this.state.searchText){\n      this.setState({\n        time: 30,\n        isBlank: false\n      })\n      this.getPostData(this.state.searchText);\n    }else{\n      this.props.havePostsAction(false);\n      this.getPostData('');\n      this.setState({\n        isBlank: true,\n        time: 30\n      })\n    }\n    event.preventDefault();\n  }\n\n  // set search input value to searchText\n  searchInputValue(e){\n    this.setState({\n      searchText: e.target.value\n    })\n  }\n\n  // get post data\n  getPostData(val){\n      this.props.showLoaderAction(true);\n      this.props.httpRequestAction('twittersearch', val);\n  }\n\n  // execute reset timer\n  timer(){\n      this.state.setTime = setInterval(()=>this.refreshTimer(), 1000);\n  }\n\n  // refresh timer logic\n  refreshTimer(){\n    if(this.state.time >= 1){\n        this.setState({\n          time: this.state.time - 1\n        })\n    }else{\n      clearInterval(this.state.setTime);\n      this.setState({\n        time: 30\n      })\n      this.getPostData(this.state.searchText);\n    }\n  }\n\n  render(){\n    const {time, isBlank} = this.state;\n    const { showLoaderReducer, havePostsReducer, httpRequestReducer, internetIssueReducer } = this.props;\n    // console.log('httpRequestReducer.data', httpRequestReducer);\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          {/* <img src={twitter} className=\"text-center\" style={{'height': '50px', 'margin': '20px auto', 'display': 'block'}} alt=\"\"/> */}\n          <SearchHeader havePosts={havePostsReducer} time={time} />\n          <Search searchHandler={(e)=>this.submitSearch(e)} handleInputValue={(e)=>this.searchInputValue(e)}/>\n          {isBlank&&<p className=\"text-danger text-center\">Please enter value to search</p>}\n          \n          {/* listing */}\n          {httpRequestReducer.data && \n            httpRequestReducer.data.statuses &&\n            httpRequestReducer.data.statuses.length && \n            httpRequestReducer.data.statuses.map((item, index)=>{\n              return <Listing data={item} key={index} />\n            })\n          }\n          \n          {/* /listing */}\n\n          {/* loader and error messages */}\n          {showLoaderReducer &&\n            <div className=\"loader-container\">\n              <div className=\"loader\"></div>\n            </div>\n          }\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-9\">\n\n              {httpRequestReducer.data && \n                httpRequestReducer.data.statuses &&\n                !httpRequestReducer.data.statuses.length && \n                <div className=\"error-wrapper\">\n                    <img src={twitter} height=\"100\" style={{'margin':'30px auto', 'display': 'block'}} alt=\"\" />\n                    <h3 style={{textAlign:'center'}}>No Result Found</h3>\n                </div>\n              }\n              \n              {httpRequestReducer&&\n                httpRequestReducer.data&&\n                httpRequestReducer.data.errors &&\n                <div className=\"error-wrapper\">\n                  <img src={twitter} height=\"100\" style={{'margin':'30px auto', 'display': 'block'}} alt=\"\" />\n                   <h3 className=\"text-center\">{httpRequestReducer.data.errors[0].message}</h3>                \n                </div>\n              }\n\n              {!isBlank && \n                typeof httpRequestReducer == 'string' &&\n                <div className=\"error-wrapper\">\n                  <img src={twitter} height=\"100\" style={{'margin':'30px auto', 'display': 'block'}} alt=\"\" />\n                  <h3 className=\"text-center\">{httpRequestReducer}</h3>\n                </div>\n              }\n\n              {!isBlank && \n                (!havePostsReducer && !internetIssueReducer) &&\n                <div className=\"error-wrapper\">\n                  <img src={twitter} height=\"100\" style={{'margin':'30px auto', 'display': 'block'}} alt=\"\" />\n                  <h3 style={{textAlign:'center'}}>No Posts available</h3>\n                </div>\n              }\n\n              {!isBlank && \n                internetIssueReducer &&\n                <div className=\"error-wrapper\">\n                  <img src={twitter} height=\"100\" style={{'margin':'30px auto', 'display': 'block'}} alt=\"\" />\n                  <h4 style={{textAlign:'center'}}>Unable to fetch data due to No/Slow internet connection, Please Try Again!!!</h4>\n                </div>\n              }              \n            </div>\n          </div>\n          {/* /loader and error messages */}\n          \n\n        </div> \n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showLoaderAction, havePostsAction, searchTextAction, \n  searchDataAction, internetIssueAction, httpRequestAction\n};\n\nconst mapStateToProps = (state)=>{\n  return state;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {combineReducers} from 'redux';\r\n\r\nconst havePostsReducer = (state=false, action)=>{\r\n    switch(action.type){\r\n        case 'HAVE_POSTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst showLoaderReducer = (state=false, action)=>{\r\n    switch(action.type){\r\n        case 'SHOW_LOADER':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst searchTextReducer = (state='', action)=>{\r\n    switch(action.type){\r\n        case 'SEARCH_TEXT':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst searchDataReducer = (state=[], action)=>{\r\n    switch(action.type){\r\n        case 'SEARCH_DATA':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst internetIssueReducer = (state=false, action)=>{\r\n    switch(action.type){\r\n        case 'INTERNET_ISSUE':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst httpRequestReducer = (state=[], action)=>{\r\n    switch(action.type){\r\n        case 'FETCH_POSTS_SUCCESS':\r\n            return action.data;\r\n        case 'FETCH_POSTS_ERROR':\r\n            return action.data\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// const setTimeReducer = (state=null, action)=>{\r\n//     switch(action.type){\r\n//         case 'SET_TIME':\r\n//             return action.payload;\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\nconst combineAllReducers = combineReducers({\r\n    havePostsReducer, showLoaderReducer, searchTextReducer, \r\n    searchDataReducer, internetIssueReducer, httpRequestReducer\r\n});\r\n\r\nexport default combineAllReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport combineAllReducers from './reducers/index';\n\nimport thunk from 'redux-thunk';\n\n\n// const customMiddleware = store => next => action => {\n//     if(action.type == \"HAVE_POSTS\"){\n//         console.log('have post action called');\n//     }\n//     console.log('middleware 1 called');\n// }\n\nconst store = createStore(\n    combineAllReducers,\n    applyMiddleware(thunk),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe(()=>{\n    console.log(store.getState());\n})\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n)\n\n"],"sourceRoot":""}